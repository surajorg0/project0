import{i as P}from"./chunk-OYAVQN5W.js";var Y=n=>{let e=new Map;e.set("web",{name:"web"});let t=n.CapacitorPlatforms||{currentPlatform:{name:"web"},platforms:e},a=(u,w)=>{t.platforms.set(u,w)},c=u=>{t.platforms.has(u)&&(t.currentPlatform=t.platforms.get(u))};return t.addPlatform=a,t.setPlatform=c,t},Z=n=>n.CapacitorPlatforms=Y(n),O=Z(typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{}),te=O.addPlatform,ne=O.setPlatform;var C=function(n){return n.Unimplemented="UNIMPLEMENTED",n.Unavailable="UNAVAILABLE",n}(C||{}),y=class extends Error{constructor(e,t){super(e),this.message=e,this.code=t}},j=n=>{var e,t;return n!=null&&n.androidBridge?"android":!((t=(e=n==null?void 0:n.webkit)===null||e===void 0?void 0:e.messageHandlers)===null||t===void 0)&&t.bridge?"ios":"web"},N=n=>{var e,t,a,c,u;let w=n.CapacitorCustomPlatform||null,r=n.Capacitor||{},T=r.Plugins=r.Plugins||{},l=n.CapacitorPlatforms,B=()=>w!==null?w.name:j(n),E=((e=l==null?void 0:l.currentPlatform)===null||e===void 0?void 0:e.getPlatform)||B,k=()=>E()!=="web",D=((t=l==null?void 0:l.currentPlatform)===null||t===void 0?void 0:t.isNativePlatform)||k,V=i=>{let o=U.get(i);return!!(o!=null&&o.platforms.has(E())||A(i))},R=((a=l==null?void 0:l.currentPlatform)===null||a===void 0?void 0:a.isPluginAvailable)||V,F=i=>{var o;return(o=r.PluginHeaders)===null||o===void 0?void 0:o.find(p=>p.name===i)},A=((c=l==null?void 0:l.currentPlatform)===null||c===void 0?void 0:c.getPluginHeader)||F,J=i=>n.console.error(i),q=(i,o,p)=>Promise.reject(`${p} does not have an implementation of "${o}".`),U=new Map,z=(i,o={})=>{let p=U.get(i);if(p)return console.warn(`Capacitor plugin "${i}" already registered. Cannot register plugins twice.`),p.proxy;let b=E(),L=A(i),v,K=()=>P(void 0,null,function*(){return!v&&b in o?v=typeof o[b]=="function"?v=yield o[b]():v=o[b]:w!==null&&!v&&"web"in o&&(v=typeof o.web=="function"?v=yield o.web():v=o.web),v}),Q=(s,d)=>{var g,m;if(L){let h=L==null?void 0:L.methods.find(f=>d===f.name);if(h)return h.rtype==="promise"?f=>r.nativePromise(i,d.toString(),f):(f,W)=>r.nativeCallback(i,d.toString(),f,W);if(s)return(g=s[d])===null||g===void 0?void 0:g.bind(s)}else{if(s)return(m=s[d])===null||m===void 0?void 0:m.bind(s);throw new y(`"${i}" plugin is not implemented on ${b}`,C.Unimplemented)}},M=s=>{let d,g=(...m)=>{let h=K().then(f=>{let W=Q(f,s);if(W){let _=W(...m);return d=_==null?void 0:_.remove,_}else throw new y(`"${i}.${s}()" is not implemented on ${b}`,C.Unimplemented)});return s==="addListener"&&(h.remove=()=>P(void 0,null,function*(){return d()})),h};return g.toString=()=>`${s.toString()}() { [capacitor code] }`,Object.defineProperty(g,"name",{value:s,writable:!1,configurable:!1}),g},S=M("addListener"),H=M("removeListener"),X=(s,d)=>{let g=S({eventName:s},d),m=()=>P(void 0,null,function*(){let f=yield g;H({eventName:s,callbackId:f},d)}),h=new Promise(f=>g.then(()=>f({remove:m})));return h.remove=()=>P(void 0,null,function*(){console.warn("Using addListener() without 'await' is deprecated."),yield m()}),h},x=new Proxy({},{get(s,d){switch(d){case"$$typeof":return;case"toJSON":return()=>({});case"addListener":return L?X:S;case"removeListener":return H;default:return M(d)}}});return T[i]=x,U.set(i,{name:i,proxy:x,platforms:new Set([...Object.keys(o),...L?[b]:[]])}),x},I=((u=l==null?void 0:l.currentPlatform)===null||u===void 0?void 0:u.registerPlugin)||z;return r.convertFileSrc||(r.convertFileSrc=i=>i),r.getPlatform=E,r.handleError=J,r.isNativePlatform=D,r.isPluginAvailable=R,r.pluginMethodNoop=q,r.registerPlugin=I,r.Exception=y,r.DEBUG=!!r.DEBUG,r.isLoggingEnabled=!!r.isLoggingEnabled,r.platform=r.getPlatform(),r.isNative=r.isNativePlatform(),r},ee=n=>n.Capacitor=N(n),$=ee(typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{}),re=$.registerPlugin,ie=$.Plugins;var G=class{constructor(e){this.listeners={},this.windowListeners={},e&&(console.warn(`Capacitor WebPlugin "${e.name}" config object was deprecated in v3 and will be removed in v4.`),this.config=e)}addListener(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t);let c=this.windowListeners[e];c&&!c.registered&&this.addWindowListener(c);let u=()=>P(this,null,function*(){return this.removeListener(e,t)}),w=Promise.resolve({remove:u});return Object.defineProperty(w,"remove",{value:()=>P(this,null,function*(){console.warn("Using addListener() without 'await' is deprecated."),yield u()})}),w}removeAllListeners(){return P(this,null,function*(){this.listeners={};for(let e in this.windowListeners)this.removeWindowListener(this.windowListeners[e]);this.windowListeners={}})}notifyListeners(e,t){let a=this.listeners[e];a&&a.forEach(c=>c(t))}hasListeners(e){return!!this.listeners[e].length}registerWindowListener(e,t){this.windowListeners[t]={registered:!1,windowEventName:e,pluginEventName:t,handler:a=>{this.notifyListeners(t,a)}}}unimplemented(e="not implemented"){return new $.Exception(e,C.Unimplemented)}unavailable(e="not available"){return new $.Exception(e,C.Unavailable)}removeListener(e,t){return P(this,null,function*(){let a=this.listeners[e];if(!a)return;let c=a.indexOf(t);this.listeners[e].splice(c,1),this.listeners[e].length||this.removeWindowListener(this.windowListeners[e])})}addWindowListener(e){window.addEventListener(e.windowEventName,e.handler),e.registered=!0}removeWindowListener(e){e&&(window.removeEventListener(e.windowEventName,e.handler),e.registered=!1)}};export{re as a,G as b};
